using System;
using System.Collections.Generic;
using System.Text;
using NCurses.Core.Interop.Mouse;

namespace NCurses.Core.Interop.SingleByte
{
    internal interface INCursesWrapperSmall<TSmall, TSmallStr> : INativeWrapper
        where TSmall : unmanaged, INCursesSCHAR
        where TSmallStr : unmanaged
    {
        //int addch(const chtype ch);
        int addch(TSmall ch);
        //int addchnstr(const chtype *chstr, int n);
        int addchnstr(in TSmall txt, int number);
        //int addchstr(const chtype *chstr);
        int addchstr(in TSmall txt);
        //int attr_get(attr_t* attrs, short* pair, void* opts);
        int attr_get(ref TSmall attrs, ref short pair, IntPtr opts);
        //int attr_off(attr_t attrs, void *opts);
        int attr_off(TSmall attrs, IntPtr opts);
        //int attr_on(attr_t attrs, void *opts);
        int attr_on(TSmall attrs, IntPtr opts);
        //int attr_set(attr_t attrs, short pair, void *opts);
        int attr_set(TSmall attrs, short pair, IntPtr opts);
        //int bkgd(chtype ch);
        int bkgd(TSmall bkgd);
        //void bkgdset(chtype ch);
        void bkgdset(TSmall bkgd);
        //int border(chtype ls, chtype rs, chtype ts, chtype bs, chtype tl, chtype tr, chtype bl, chtype br);
        int border(TSmall ls, TSmall rs, TSmall ts, TSmall bs, TSmall tl, TSmall tr, TSmall bl, TSmall br);
        //int box(WINDOW *win, chtype verch, chtype horch);
        int box(IntPtr window, TSmall verch, TSmall horch);
        //int chgat(int n, attr_t attr, short pair, const void *opts);
        int chgat(int number, TSmall attrs, short pair, IntPtr opts);
        //int echochar(const chtype ch);
        int echochar(TSmall ch);
        // chtype getbkgd(WINDOW *win);
        TSmall getbkgd(IntPtr window);
        //int getmouse(MEVENT *event);
        int getmouse(ref MEVENT<TSmall> ev);
        //int getmouse_sp(SCREEN* sp, MEVENT *event);
        int getmouse_sp(IntPtr screen, ref MEVENT<TSmall> ev);
        //int hline(chtype ch, int n);
        int hline(TSmall ch, int count);
        //chtype inch(void);
        TSmall inch();
        //int inchnstr(chtype *chstr, int n);
        int inchnstr(ref TSmall txt, int count);
        //int inchstr(chtype *chstr);
        int inchstr(ref TSmall txt);
        //int insch(chtype ch);
        int insch(TSmall ch);
        //mmask_t mousemask(mmask_t newmask, mmask_t *oldmask);
        TSmall mousemask(TSmall newmask, ref TSmall oldmask);
        //mmask_t mousemask_sp(SCREEN* sp, mmask_t newmask, mmask_t *oldmask);
        TSmall mousemask_sp(IntPtr screen, TSmall newmask, ref TSmall oldmask);
        //int mvaddch(int y, int x, const chtype ch);
        int mvaddch(int y, int x, TSmall ch);
        //int mvaddchnstr(int y, int x, const chtype *chstr, int n);
        int mvaddchnstr(int y, int x, in TSmall chstr, int n);
        //int mvaddchstr(int y, int x, const chtype *chstr);
        int mvaddchstr(int y, int x, in TSmall chStr);
        //int mvchgat(int y, int x, int n, attr_t attr, short pair, const void* opts);
        int mvchgat(int y, int x, int number, TSmall attrs, short pair, IntPtr opts);
        //int mvhline(int y, int x, chtype ch, int n);
        int mvhline(int y, int x, TSmall ch, int count);
        //chtype mvinch(int y, int x);
        TSmall mvinch(int y, int x);
        //int mvinchnstr(int y, int x, chtype *chstr, int n);
        int mvinchnstr(int y, int x, ref TSmall txt, int count);
        //int mvinchstr(int y, int x, chtype *chstr);
        int mvinchstr(int y, int x, ref TSmall txt);
        //int mvinsch(int y, int x, chtype ch);
        int mvinsch(int y, int x, TSmall ch);
        //int mvvline(int y, int x, chtype ch, int n);
        int mvvline(int y, int x, TSmall ch, int n);
        //int mvwaddch(WINDOW *win, int y, int x, const chtype ch);
        int mvwaddch(IntPtr window, int y, int x, TSmall ch);
        //int mvwaddchnstr(WINDOW *win, int y, int x, const chtype *chstr, int n);
        int mvwaddchnstr(IntPtr window, int y, int x, in TSmall chstr, int n);
        //int mvwaddchstr(WINDOW *win, int y, int x, const chtype *chstr);
        int mvwaddchstr(IntPtr window, int y, int x, in TSmall chstr);
        //int mvwchgat(WINDOW *win, int y, int x, int n, attr_t attr, short pair, const void* opts);
        int mvwchgat(IntPtr window, int y, int x, int number, TSmall attrs, short pair, IntPtr opts);
        //int mvwhline(WINDOW *, int y, int x, chtype ch, int n);
        int mvwhline(IntPtr window, int y, int x, TSmall ch, int count);
        //chtype mvwinch(WINDOW *win, int y, int x);
        TSmall mvwinch(IntPtr window, int y, int x);
        //int mvwinchnstr(WINDOW *win, int y, int x, chtype *chstr, int n);
        int mvwinchnstr(IntPtr window, int y, int x, ref TSmall chStr, int count);
        //int mvwinchstr(WINDOW *win, int y, int x, chtype *chstr);
        int mvwinchstr(IntPtr window, int y, int x, ref TSmall chStr);
        //int mvwinsch(WINDOW *win, int y, int x, chtype ch);
        int mvwinsch(IntPtr window, int y, int x, TSmall ch);
        //int mvwvline(WINDOW *, int y, int x, chtype ch, int n);
        int mvwvline(IntPtr window, int y, int x, TSmall ch, int n);
        //int pechochar(WINDOW *pad, chtype ch);
        int pechochar(IntPtr pad, TSmall ch);
        //attr_t slk_attr(void);
        TSmall slk_attr();
        //attr_t slk_attr(SCREEN* sp);
        TSmall slk_attr_sp(IntPtr screen);
        //int slk_attr_off(const attr_t attrs, void * opts);
        int slk_attr_off(TSmall attrs, IntPtr opts);
        //int slk_attr_on(attr_t attrs, void* opts);
        int slk_attr_on(TSmall attrs, IntPtr opts);
        //int slk_attr_set(const attr_t attrs, short pair, void* opts);
        int slk_attr_set(TSmall attrs, short color_pair, IntPtr opts);
        //int slk_attr_set_sp(SCREEN* sp, const attr_t attrs, short pair, void* opts);
        int slk_attr_set_sp(IntPtr screen, TSmall attrs, short color_pair, IntPtr opts);
        //int slk_attroff(const chtype attrs);
        int slk_attroff(TSmall attrs);
        //int slk_attroff_sp(SCREEN* sp, const chtype attrs);
        int slk_attroff_sp(IntPtr screen, TSmall attrs);
        //int slk_attron(const chtype attrs);
        int slk_attron(TSmall attrs);
        //int slk_attron_sp(SCREEN* sp, const chtype attrs);
        int slk_attron_sp(IntPtr screen, TSmall attrs);
        //int slk_attrset(const chtype attrs);
        int slk_attrset(TSmall attrs);
        //int slk_attrset_sp(SCREEN* sp, const chtype attrs);
        int slk_attrset_sp(IntPtr screen, TSmall attrs);
        //attr_t term_attrs(void);
        TSmall term_attrs();
        //attr_t term_attrs_sp(SCREEN* sp);
        TSmall term_attrs_sp(IntPtr screen);
        //chtype termattrs(void);
        TSmall termattrs();
        //chtype termattrs_sp(SCREEN* sp);
        TSmall termattrs_sp(IntPtr screen);
        //char *unctrl(chtype c);
        ref TSmallStr unctrl(TSmall ch);
        //int ungetmouse(MEVENT *event);
        int ungetmouse(in MEVENT<TSmall> ev);
        //int ungetmouse_sp(SCREEN* sp, MEVENT *event);
        int ungetmouse_sp(IntPtr screen, in MEVENT<TSmall> ev);
        //int vid_attr(attr_t attrs, short pair, void *opts);
        int vid_attr(TSmall attrs, short pair, IntPtr opts);
        //int vid_attr_sp(SCREEN* sp, attr_t attrs, short pair, void *opts);
        int vid_attr_sp(IntPtr screen, TSmall attrs, short pair, IntPtr opts);
        //int vid_puts(attr_t attrs, short pair, void *opts, int (*putc)(int));
        int vid_puts(TSmall attrs, short pair, IntPtr opts, IntPtr OUTC);
        //int vid_puts_sp(SCREEN* sp, attr_t attrs, short pair, void *opts, int (*putc)(int));
        int vid_puts_sp(IntPtr screen, TSmall attrs, short pair, IntPtr opts, IntPtr OUTC);
        //int vidattr(chtype attrs);
        int vidattr(TSmall attrs);
        //int vidattr_sp(SCREEN* sp, chtype attrs);
        int vidattr_sp(IntPtr screen, TSmall attrs);
        //int vidputs(chtype attrs, int (*putc)(int));
        int vidputs(TSmall attrs, IntPtr OUTC);
        //int vidputs_sp(SCREEN* sp, chtype attrs, int (*putc)(int));
        int vidputs_sp(IntPtr screen, TSmall attrs, IntPtr OUTC);
        //int vline(chtype ch, int n);
        int vline(TSmall ch, int n);
        //int waddch(WINDOW *win, const chtype ch);
        int waddch(IntPtr window, TSmall ch);
        //int waddchnstr(WINDOW *win, const chtype *chstr, int n);
        int waddchnstr(IntPtr window, in TSmall chstr, int number);
        //int mvaddchstr(int y, int x, const chtype *chstr);
        int waddchstr(IntPtr window, in TSmall chstr);
        //int wattr_get(WINDOW *win, attr_t *attrs, short *pair, void *opts);
        int wattr_get(IntPtr window, ref TSmall attrs, ref short pair, IntPtr opts);
        //int wattr_off(WINDOW *win, attr_t attrs, void *opts);
        int wattr_off(IntPtr window, TSmall attrs, IntPtr opts);
        //int wattr_on(WINDOW *win, attr_t attrs, void *opts);
        int wattr_on(IntPtr window, TSmall attrs, IntPtr opts);
        //int wattr_set(WINDOW *win, attr_t attrs, short pair, void *opts);
        int wattr_set(IntPtr window, TSmall attrs, short pair, IntPtr opts);
        //int wbkgd(WINDOW *win, chtype ch);
        int wbkgd(IntPtr window, TSmall bkgd);
        //void wbkgdset(WINDOW *win, chtype ch);
        void wbkgdset(IntPtr window, TSmall bkgd);
        //int wborder(WINDOW *win, chtype ls, chtype rs, chtype ts, chtype bs, chtype tl, chtype tr, chtype bl, chtype br);
        int wborder(IntPtr window, TSmall ls, TSmall rs, TSmall ts, TSmall bs, TSmall tl, TSmall tr, TSmall bl, TSmall br);
        //int wchgat(WINDOW *win, int n, attr_t attr, short pair, const void* opts);
        int wchgat(IntPtr window, int number, TSmall attrs, short pair, IntPtr opts);
        //int wechochar(WINDOW *win, const chtype ch);
        int wechochar(IntPtr window, TSmall ch);
        //int whline(WINDOW *win, chtype ch, int n);
        int whline(IntPtr window, TSmall ch, int count);
        //chtype winch(WINDOW *win);
        TSmall winch(IntPtr window);
        //int winchnstr(WINDOW *win, chtype *chstr, int n);
        int winchnstr(IntPtr window, ref TSmall chstr, int count);
        //int winchstr(WINDOW *win, chtype *chstr);
        int winchstr(IntPtr window, ref TSmall chstr);
        //int winsch(WINDOW *win, chtype ch);
        int winsch(IntPtr window, TSmall ch);
        //int wvline(WINDOW *win, chtype ch, int n);
        int wvline(IntPtr window, TSmall ch, int n);
    }
}
